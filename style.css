/* =================
   GLOBAL STYLES
   ================= */
* {
  font-family: 'W95FA', system-ui, -apple-system, sans-serif;
  font-size: 18px;
  box-sizing: border-box;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  outline: 0.1px solid red;
}

@font-face {
  font-family: 'W95FA';
  src: url('w95fa.woff2') format('woff2'), 
       url('w95fa.woff') format('woff');
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

/* =================
   LAYOUT
   ================= */
/* Main container contain row container */
.container {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  margin: 2px;  
  aspect-ratio: 5 / 4; 
}

/* Row container contain row of cars */
.row-container {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  width: 100%;
  gap: 2%;
  perspective: 1000px; /* Add perspective to the container */
}

header { 
  color: white;
  display: flex;
  gap: 2px;
  padding: 2px;    
  margin: 2px;  
  height: 36px;
}

header button {
  width: 18px;
  height: 16px;
  margin: auto 4px 4px 4px;
}

/* =================
   WINDOWS 95 STYLE
   ================= */
.inset {
  padding: 2px;
  border: 2px solid;
  border-color: #451930 #ffffff #ffffff #451930;
  position: relative;
}

.inset::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border: 2px solid;
  border-color: #808080 #c0c0c0 #c0c0c0 #808080;
}

.outset {
  padding: 2px;
  border: 2px solid;
  border-color: #ffffff #451930 #451930 #ffffff;
  position: relative;
}

.outset::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border: 2px solid;
  border-color: #c0c0c0 #808080 #808080 #c0c0c0;
}

.bg-blue {
  background: #000080;
}

.bg-gray {
  background: #C0C0C0;
}

.bg-teal {
  background: #008080 ;
}

.bg-green {
  background: #008001;
}

/* Alternative method using hr element */
hr {
  height: 4px;
  border: none;
  background-color: #808080;  /* Dark gray */
  background-image: linear-gradient(to bottom, 
        #808080 0%,   /* Dark gray top */
        #FFFFFF 100%  /* White bottom */
    );
}

.close {
  width: 28px;
  height: 24px;
  background-color: #c0c0c0;
  position: relative;
  padding: 0;
  cursor: pointer;
}

/* The X symbol using a custom pixel pattern */
.close::after {
  content: '';
  position: absolute;
  width: 14px;
  height: 14px;
  top: 3px;
  left: 5px;
  background-image: linear-gradient(45deg, 
    transparent 0%, transparent 45%, 
    #000 45%, #000 55%, 
    transparent 55%, transparent 100%
  ),
  linear-gradient(-45deg, 
    transparent 0%, transparent 45%, 
    #000 45%, #000 55%, 
    transparent 55%, transparent 100%
  );
}

/* Pressed state */
button.outset:active {
  border-color: #451930 #ffffff #ffffff #451930;
  padding: 1px 0 0 1px;
}

button.outset:active::before {
  border-color: #808080 #ffffff #ffffff #808080;
  padding: 1px 0 0 1px;
}

body::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 9999;
  
  /* Windows 95 style grid */
  background-image:
    linear-gradient(to right, rgba(128, 128, 128, 0.3) 0.2px, transparent 0.1px),
    linear-gradient(to bottom, rgba(128, 128, 128, 0.3) 0.2px, transparent 0.1px);
  background-size: 2px 2px;
}

/* =================
   CARD STYLES
   ================= */
   
/* Card Styles */ 
.card {
  width: 20%;
  cursor: pointer;
  transform-style: preserve-3d;
  transition: transform 0.6s;
  position: relative;
  animation: getCard 0.5s ease-in;
  opacity: 0;  
}

/* Card Face And Card Behind Styles */
.card img {
  width: 100%;
  backface-visibility: hidden;
}

/* Card Face Styles */
.card .front {
  position: relative;
  transform: rotateY(180deg);
  backface-visibility: hidden;
}

/* Card Behind Styles */ 
.card .back {
  position: absolute;
  top: 0;
  left: 0;
  backface-visibility: hidden;
}

/* =================
   CARD STATES
   ================= */
.card[data-state="initial"] {
  opacity: 0;
}

.card[data-state="drawing"] {
  animation: getCard 0.5s ease-in;
}

.card[data-state="flipping"],
.card[data-state="flipped"] {
  transition: transform 0.6s;
  transform: rotateY(180deg);
}

.card[data-state="selected"] {
  transform: rotateY(180deg) translateY(-5%);  
}

.card[data-state="deleting"] {
  animation: deleteCard 0.5s ease-in;
  transform: rotateY(180deg);
  pointer-events: none;  
}

/* Ensure front face stays visible during deletion */
.card[data-state="deleting"] .front {
  backface-visibility: visible;  
  z-index: 2;  
} 

.card[data-state="dragging"] {
  cursor: grabbing;
}

/* =================
   CARD UI STYLE
   ================= */
/* All UI need to function only when card is flipped state */

/* Delete Button */
.card[data-state="flipped"] .delete-button,
.card[data-state="selected"] .delete-button {
  position: absolute;
  top: 1.5%;
  right: 2%;
  width: 8.2%;
  height: 4.2%;
  display: block;
  cursor: pointer;
  z-index: 2; /* Ensure the button is on top */
}

/* Draggable Zone Styles */
.card[data-state="flipped"] .draggable-zone,
.card[data-state="selected"] .draggable-zone { 
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 7%;
  display: block;
  cursor: grab;
  z-index: 1; /* Ensure the draggable zone is on top */
}


/* =================
   CARD UI STATES
   ================= */
/* Delete button is only visible in flipped or selected states */
.card[data-state="flipped"] .delete-button,
.card[data-state="selected"] .delete-button {
  display: block;
}

/* Draggable zone is only active in flipped or selected states */
.card[data-state="flipped"] .draggable-zone,
.card[data-state="selected"] .draggable-zone {
  display: block;
}

/* =================
   CARD ANIMATIONS
   ================= */
/* Get card animation */
@keyframes getCard {
  from {
    opacity: 0;
    transform: translateY(-10%);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Delete card animation */
@keyframes deleteCard {
  from {
    opacity: 1;
    transform: rotateY(180deg) scale(1);
  }
  to {
    opacity: 0;
    transform: rotateY(180deg) scale(0);
  }
}

/* =================
   RESPONSIVE DESIGN
   ================= */
@media only screen and (min-width: 600px) {
  body {
    display: grid;
    grid:
    "header header" 1fr
    "main aside" auto
    "footer footer" 1fr
    / 2fr 1fr;
  }
